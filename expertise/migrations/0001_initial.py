# Generated by Django 5.1.6 on 2025-02-09 01:52

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PersonnelNavigant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dn', models.CharField(max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Le numéro de sécurité sociale doit comporter 7 chiffres.', regex='^\\d{7}$')], verbose_name='Numéro de sécurité sociale')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('date_de_naissance', models.DateField(verbose_name='Date de naissance (DD/MM/YYYY)')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, verbose_name='Sexe')),
                ('nom_ca', models.CharField(max_length=100, verbose_name='Nom de la compagnie aérienne')),
            ],
        ),
        migrations.CreateModel(
            name='FicheEvenement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_evenement', models.DateField(verbose_name="Date de l'événement (DD/MM/YYYY)")),
                ('cs_cempn', models.BooleanField(default=False, verbose_name='CS CEMPn')),
                ('date_cempn', models.DateField(blank=True, null=True, verbose_name='Date CEMPn')),
                ('honoraire_cempn', models.IntegerField(default=0, verbose_name='Honoraire CEMPn')),
                ('cs_oph', models.BooleanField(default=False, verbose_name='CS OPH')),
                ('date_cs_oph', models.DateField(blank=True, null=True, verbose_name='Date CS OPH')),
                ('honoraire_cs_oph', models.IntegerField(default=0, verbose_name='Honoraire CS OPH')),
                ('cs_orl', models.BooleanField(default=False, verbose_name='CS ORL')),
                ('date_cs_orl', models.DateField(blank=True, null=True, verbose_name='Date CS ORL')),
                ('honoraire_cs_orl', models.IntegerField(default=0, verbose_name='Honoraire CS ORL')),
                ('cs_labo', models.BooleanField(default=False, verbose_name='CS LABO')),
                ('date_cs_labo', models.DateField(blank=True, null=True, verbose_name='Date CS LABO')),
                ('honoraire_cs_labo', models.IntegerField(default=0, verbose_name='Honoraire CS LABO')),
                ('cs_lbx', models.BooleanField(default=False, verbose_name='CS LBX')),
                ('date_cs_lbx', models.DateField(blank=True, null=True, verbose_name='Date CS LBX')),
                ('honoraire_cs_lbx', models.IntegerField(default=0, verbose_name='Honoraire CS LBX')),
                ('cs_radio', models.BooleanField(default=False, verbose_name='CS RADIO')),
                ('date_cs_radio', models.DateField(blank=True, null=True, verbose_name='Date CS RADIO')),
                ('honoraire_cs_radio', models.IntegerField(default=0, verbose_name='Honoraire CS RADIO')),
                ('recherche_toxique', models.BooleanField(default=False, verbose_name='Recherche toxique')),
                ('frais_dossier', models.IntegerField(default=0, verbose_name='Frais de dossier')),
                ('total', models.IntegerField(default=0, help_text='Somme des honoraires et frais de dossier', verbose_name='Total')),
                ('paiement', models.BooleanField(default=False, verbose_name='Paiement')),
                ('date_paiement', models.DateField(blank=True, null=True, verbose_name='Date de paiement')),
                ('modalite_paiement', models.CharField(blank=True, choices=[('liquide', 'Liquide'), ('virement', 'Virement'), ('cb', 'Carte Bancaire')], max_length=10, null=True, verbose_name='Modalité de paiement')),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expertise.personnelnavigant', to_field='dn', verbose_name='DN du patient')),
            ],
        ),
    ]
